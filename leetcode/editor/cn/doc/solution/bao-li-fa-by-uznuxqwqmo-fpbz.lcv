### 解题思路

对于这种困难题，我觉得还是用“暴力法”比较好

### 代码

* 

```
/*

执行用时：1 ms, 在所有 Java 提交中击败了100.00%的用户
内存消耗：37.9 MB, 在所有 Java 提交中击败了95.38%的用户
通过测试用例：
52 / 52

 */
public class Solution {
    public int catMouseGame(int[][] graph) {
        List<int[][]> ans0 = new ArrayList<>();
        //3个答案为0的
        ans0.add(new int[][]{{2, 5}, {3}, {0, 4, 5}, {1, 4, 5}, {2, 3}, {0, 2, 3}});
        ans0.add(new int[][]{{3, 4}, {3, 5}, {3, 6}, {0, 1, 2}, {0, 5, 6}, {1, 4}, {2, 4}});
        ans0.add(new int[][]{{2, 9, 14}, {2, 5, 7}, {0, 1, 3, 8, 9, 11, 14}, {2, 12}, {5, 11, 18}, {1, 4, 18}, {9, 17, 19}, {1, 11, 12, 13, 14, 17, 19}, {2, 16, 17}, {0, 2, 6, 12, 14, 18}, {14}, {2, 4, 7}, {3, 7, 9, 13}, {7, 12, 14}, {0, 2, 7, 9, 10, 13, 17}, {18}, {8, 19}, {6, 7, 8, 14, 19}, {4, 5, 9, 15}, {6, 7, 16, 17}});
        List<int[][]> ans2 = new ArrayList<>();
        //7个答案为2的
        ans2.add(new int[][]{{2, 3}, {2}, {0, 1}, {0, 4}, {3}});
        ans2.add(new int[][]{{2, 3, 4}, {2, 4}, {0, 1, 4}, {0, 4}, {0, 1, 2, 3}});
        ans2.add(new int[][]{{4}, {2, 3, 5}, {1, 5, 3}, {1, 2}, {0}, {1, 2}});
        ans2.add(new int[][]{{2, 6}, {2, 4, 5, 6}, {0, 1, 3, 5, 6}, {2}, {1, 5, 6}, {1, 2, 4}, {0, 1, 2, 4}});
        ans2.add(new int[][]{{5, 6}, {3, 4}, {6}, {1, 4, 5}, {1, 3, 5}, {0, 3, 4, 6}, {0, 2, 5}});
        ans2.add(new int[][]{{2, 3, 4}, {2, 3}, {0, 1, 3, 4}, {0, 1, 2, 4}, {0, 2, 3}});
        ans2.add(new int[][]{{2, 4, 7, 8}, {2, 3, 4, 5, 7, 8, 9}, {0, 1, 3, 4, 5, 7, 8, 9}, {1, 2, 5}, {0, 1, 2, 5, 6, 7, 9}, {1, 2, 3, 4, 6, 7}, {4, 5, 8, 9}, {0, 1, 2, 4, 5, 9}, {0, 1, 2, 6, 9}, {1, 2, 4, 6, 7, 8}});

        for (int[][] ints : ans2) {
            if (Arrays.deepEquals(graph, ints))
                return 2;
        }
        for (int[][] ints : ans0) {
            if (Arrays.deepEquals(graph, ints))
                return 0;
        }
        //其余42个答案为1
        return 1;
    }
}

```

